- name: Create RDS instance and replica
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    aws_region: us-west-2
    db_instance_id: my-db-instance
    db_instance_class: db.t2.micro
    db_engine: mysql
    db_engine_version: 8.0.26
    db_name: my_database
    db_username: my_username
    db_password: my_password
    subnet_id: subnet-0a1b2c3d4e5f6g7h8  #check vpc subnets, private subnet1
    replication_subnet_id: subnet-9i8h7g6f5e4d3c2b1 # private subnet2
    replication_source_id: my-db-instance
    replica_instance_id: my-replica-instance

  tasks:
    - name: Create DB subnet group
      aws_rds_subnet_group:
        name: my-db-subnet-group
        description: Subnet group for RDS database
        state: present
        region: "{{ aws_region }}"
        subnets:
          - "{{ subnet_id }}"

    - name: Create DB instance
      aws_rds:
        state: present
        region: "{{ aws_region }}"
        instance_name: "{{ db_instance_id }}"
        instance_type: "{{ db_instance_class }}"
        engine: "{{ db_engine }}"
        engine_version: "{{ db_engine_version }}"
        db_name: "{{ db_name }}"
        username: "{{ db_username }}"
        password: "{{ db_password }}"
        subnet: "{{ subnet_id }}"
        db_subnet_group: my-db-subnet-group
        multi_az: no
        backup_retention_period: 7
        publicly_accessible: no
        wait: yes

    - name: Get DB instance endpoint
      aws_rds_instance_info:
        region: "{{ aws_region }}"
        db_instance_identifier: "{{ db_instance_id }}"
      register: db_instance_info

    - name: Create replication subnet group
      aws_rds_subnet_group:
        name: my-replication-subnet-group
        description: Subnet group for RDS replication
        state: present
        region: "{{ aws_region }}"
        subnets:
          - "{{ replication_subnet_id }}"

    - name: Create DB replication instance
      shell: "aws rds create-db-instance-read-replica --db-instance-identifier {{ replication_source_id }} --db-instance-class {{ db_instance_class }} --region {{ aws_region }} --subnet-group-name my-replication-subnet-group --no-publicly-accessible --db-instance-identifier {{ replica_instance_id }}"
      register: replica_instance_output
      failed_when: replica_instance_output.rc != 0  # return code !=0 is failed
      changed_when: replica_instance_output.rc == 0

    - name: Wait for replication instance to be available
      shell: "aws rds wait db-instance-available --db-instance-identifier {{ replica_instance_id }} --region {{ aws_region }}"
      retries: 30
      delay: 10

    - name: Set replica as read replica
      shell: "aws rds modify-db-instance --db-instance-identifier {{ replica_instance_id }} --region {{ aws_region }} --apply-immediately --no-multi-az --backup-retention-period 0 --copy-tags-to-snapshot"
      register: modify_instance_output
      failed_when: modify_instance_output.rc != 0 # return code !=0 is failed
      changed_when: modify_instance_output.rc == 0
